// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) // 用户唯一ID
  nickname  String // 用户昵称
  phone     String? // 手机号码
  avatar    String?   @default("https://picsum.photos/200") // 头像地址
  gender    String    @default("secret") // 性别 男:man 女:woman 保密:secret
  status    Int       @default(1) // 状态 1:正常 2:禁用 3:删除
  level     Int       @default(0) // 用户等级
  email     String    @unique // 邮箱
  password  String // 密码
  birthday  DateTime? // 生日
  bio       String? // 个人简介
  createdAt DateTime  @default(now()) // 创建时间
  updatedAt DateTime?  @updatedAt // 更新时间
}

model ShippingAddress {
  id        Int       @id @default(autoincrement()) // 地址唯一ID
  userId    Int // 用户ID
  name      String // 收货人姓名
  phone     String // 收货人手机号码
  province  String // 省
  city      String // 市
  area      String // 区
  address   String // 详细地址
  isDefault Boolean @default(false) // 是否默认地址
  tag       String? // 标签
  status    Int       @default(1) // 状态 1:正常 2:禁用 3:删除
  createdAt DateTime  @default(now()) // 创建时间
  updatedAt DateTime?  @updatedAt // 更新时间
}

model Goods {
  goodsId       Int       @id @default(autoincrement()) // 商品唯一ID
  name          String    // 商品名称
  description   String?   // 商品描述
  mainImage     String?   // 主图
  images        Json      @default("[]") // 商品图片数组
  detailImage   Json      @default("[]") // 商品详情图
  categoryId    Int       // 分类ID
  price         Decimal   @db.Decimal(10, 2) // 商品价格，使用 Decimal 类型更适合价格
  originalPrice Decimal   @db.Decimal(10, 2) // 商品原价
  sales         Int       @default(0) // 商品销量
  stock         Int       @default(0) // 商品库存
  status        Int       @default(1) // 状态 1:上架 2:下架 3:删除
  isHot         Boolean   @default(false) // 是否热门
  isNew         Boolean   @default(true) // 是否新品
  createdAt     DateTime  @default(now())
  updatedAt     DateTime?  @updatedAt
  attributes    GoodsAttribute[]
  skus          Sku[]
}

model GoodsAttribute {
  attributeId Int      @id @default(autoincrement())
  title      String   // 属性名称，如"颜色"、"尺寸"
  goodsId    Int
  goods      Goods    @relation(fields: [goodsId], references: [goodsId])
  createdAt  DateTime @default(now())
  updatedAt  DateTime? @updatedAt
  values     GoodsAttributeValue[]
  @@index([goodsId])
}

model GoodsAttributeValue {
  id          Int      @id @default(autoincrement())
  attributeId Int
  value      String   // 属性值，如 "红色"
  createdAt  DateTime @default(now())
  updatedAt  DateTime? @updatedAt
  attribute  GoodsAttribute @relation(fields: [attributeId], references: [attributeId])
}

model Sku {
  skuId         Int      @id @default(autoincrement())
  code          String?  // SKU编码
  name          String   // SKU名称
  price         Decimal  @db.Decimal(10, 2) // SKU价格
  originalPrice Decimal  @db.Decimal(10, 2) // SKU原价
  stock         Int      @default(0) // SKU库存
  sales         Int      @default(0) // SKU销量
  properties    Json     @default("[]") // SKU属性组合，如 {"颜色":"红色","尺寸":"M"}
  image         String?  // SKU图片
  status        Int      @default(1) // 状态 1:上架 2:下架
  goodsId       Int
  goods         Goods    @relation(fields: [goodsId], references: [goodsId])
  createdAt     DateTime @default(now())
  updatedAt     DateTime? @updatedAt

  @@index([goodsId])
}

model GoodsOrder {
  id          Int      @id @default(autoincrement())
  orderId     String   @unique // 订单ID
  userId      Int      // 用户ID
  totalPrice  Decimal  @db.Decimal(10, 2) // 订单总价
  shippingName String? // 收货人姓名
  shippingPhone String? // 收货人手机号码
  shippingAddress String? // 收货地址
  shippingProvince String? // 收货人省份
  shippingCity String? // 收货人城市
  shippingArea String? // 收货人区
  couponId    Int? // 优惠券ID
  orderLogisticsId Int? // 订单物流ID
  logisticsFee Int? // 物流费用
  payTime     DateTime? // 支付时间
  shipTime    DateTime? // 发货时间
  receiveTime DateTime? // 收货时间
  remark      String? // 订单备注
  goodsInfo   GoodsOrderInfo[]
  status      Int      @default(1) // 状态 1:待支付 2:已支付(待发货) 3:已发货 4:已收货 5:已取消
  createdAt   DateTime @default(now())
  updatedAt   DateTime? @updatedAt
}

model GoodsOrderInfo {
  id          Int      @id @default(autoincrement())
  orderId     String   @unique // 订单ID
  userId      Int      // 用户ID
  goodsId     Int      // 商品ID
  skuId       Int      // SKU ID
  goodsName   String   // 商品名称
  goodsImage  String  // 商品图片
  properties    Json     @default("[]") // SKU属性组合，如 {"颜色":"红色","尺寸":"M"}
  originalPrice Decimal  @db.Decimal(10, 2) // SKU原价
  price       Decimal  @db.Decimal(10, 2) // 订单价格
  number    Int      // 数量
  totalPrice  Decimal  @db.Decimal(10, 2) // 订单总价
  createdAt   DateTime @default(now())
  goodsOrder  GoodsOrder @relation(fields: [orderId], references: [orderId])
}
